
# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v5.025.
use strict;
use warnings;

use 5.010001;

use ExtUtils::MakeMaker;

use File::ShareDir::Install;
$File::ShareDir::Install::INCLUDE_DOTFILES = 1;
$File::ShareDir::Install::INCLUDE_DOTDIRS = 1;
install_share dist => "share";


my %WriteMakefileArgs = (
  "ABSTRACT" => "Convert Rinci metadata to documentation",
  "AUTHOR" => "perlancar <perlancar\@cpan.org>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "File::ShareDir::Install" => "0.06"
  },
  "DISTNAME" => "Perinci-To-Doc",
  "EXE_FILES" => [
    "bin/peri-doc"
  ],
  "LICENSE" => "perl",
  "MIN_PERL_VERSION" => "5.010001",
  "NAME" => "Perinci::To::Doc",
  "PREREQ_PM" => {
    "Data::Dump" => 0,
    "Data::Dump::OneLine" => 0,
    "Data::Sah::Normalize" => 0,
    "File::Which" => 0,
    "Function::Fallback::CoreOrPP" => 0,
    "Locale::TextDomain::UTF8" => 0,
    "Log::Any" => 0,
    "Markdown::To::POD" => "0.02",
    "Moo" => 0,
    "Moo::Role" => 0,
    "Perinci::Access" => "0.25",
    "Perinci::Access::Perl" => "0.66",
    "Perinci::Object" => "0.11",
    "Perinci::Sub::ConvertArgs::Array" => 0,
    "Perinci::Sub::GetArgs::Argv" => "0.46",
    "Perinci::Sub::Normalize" => 0,
    "Perinci::Sub::Util" => 0,
    "Rinci" => "1.1.42"
  },
  "TEST_REQUIRES" => {
    "File::Spec" => 0,
    "IO::Handle" => 0,
    "IPC::Open3" => 0,
    "Test::More" => "0.98"
  },
  "VERSION" => "0.58",
  "test" => {
    "TESTS" => "t/*.t"
  }
);


my %FallbackPrereqs = (
  "Data::Dump" => 0,
  "Data::Dump::OneLine" => 0,
  "Data::Sah::Normalize" => 0,
  "ExtUtils::MakeMaker" => 0,
  "File::ShareDir::Install" => "0.06",
  "File::Spec" => 0,
  "File::Which" => 0,
  "Function::Fallback::CoreOrPP" => 0,
  "IO::Handle" => 0,
  "IPC::Open3" => 0,
  "Locale::TextDomain::UTF8" => 0,
  "Log::Any" => 0,
  "Markdown::To::POD" => "0.02",
  "Moo" => 0,
  "Moo::Role" => 0,
  "Perinci::Access" => "0.25",
  "Perinci::Access::Perl" => "0.66",
  "Perinci::Object" => "0.11",
  "Perinci::Sub::ConvertArgs::Array" => 0,
  "Perinci::Sub::GetArgs::Argv" => "0.46",
  "Perinci::Sub::Normalize" => 0,
  "Perinci::Sub::Util" => 0,
  "Rinci" => "1.1.42",
  "Test::More" => "0.98"
);


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);

{
package
MY;
use File::ShareDir::Install qw(postamble);
}



# modify generated Makefile to install bash completion for scripts. this piece
# is generated by Dist::Zilla::Plugin::Rinci::InstallCompletion version 0.03.
INSTALL_COMPLETION:
{
    print "Modifying Makefile to install bash completion on install\n";
    open my($fh), "<", "Makefile" or die "Can't open generated Makefile: $!";
    my $content = do { local $/; ~~<$fh> };

    $content =~ s/^(install :: pure_install doc_install)/$1 comp_install/m
        or die "Can't find pattern in Makefile (1)";

    $content =~ s/^(uninstall :: .+)/$1 comp_uninstall/m
        or die "Can't find pattern in Makefile (2)";

    $content .= qq|\ncomp_install :\n\t| .
        q|$(PERLRUN) -E'if(eval { require App::BashCompletionProg; 1 }) { system "bash-completion-prog", "--verbose", @ARGV }' -- $(EXE_FILES)| .
        qq|\n\n|;

    $content .= qq|\ncomp_uninstall :\n\t| .
        q|$(PERLRUN) -E'if(eval { require App::BashCompletionProg; 1 }) { system "bash-completion-prog", "--remove", "--verbose", @ARGV }' -- $(EXE_FILES)| .
        qq|\n\n|;

    open $fh, ">", "Makefile" or die "Can't write modified Makefile: $!";
    print $fh $content;
}
